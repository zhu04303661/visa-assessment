version: '3.8'

services:
  # 后端服务 - 使用现有的工作镜像
  backend:
    image: ace-backend:working
    container_name: ace-backend
    ports:
      - "5001:5001"
      - "5002:5002"
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    volumes:
      - ./ace_gtv/data:/app/data
      - ./ace_gtv/resumes:/app/resumes
      - ./ace_gtv/personal_kb:/app/personal_kb
    env_file:
      - .env.local
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; exit(0) if requests.get('http://localhost:5001/health', timeout=5).status_code == 200 else exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ace-network

  # 前端服务 - 使用优化的镜像
  frontend:
    image: ace-frontend:optimized
    container_name: ace-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./ace_gtv/data:/app/data
      - ./ace_gtv/resumes:/app/resumes
      - ./ace_gtv/personal_kb:/app/personal_kb
    env_file:
      - .env.local
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - ace-network

  # Redis缓存服务（可选）
  redis:
    image: redis:7-alpine
    container_name: ace-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ace-network
    profiles:
      - with-redis

networks:
  ace-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
